@model IEnumerable<AspNetIdentityTry1.Models.Item>

@{            
    ViewBag.Title = "ShowUserItems";

    List<SelectListItem> numersPerPage = new List<SelectListItem>();
    numersPerPage.Add(new SelectListItem
    {
        Text = "5",
        Value = "5"
    });
    numersPerPage.Add(new SelectListItem
    {
        Text = "10",
        Value = "10"
    });
    numersPerPage.Add(new SelectListItem
    {
        Text = "20",
        Value = "20"
    });
    numersPerPage.Add(new SelectListItem
    {
        Text = "50",
        Value = "50"
    });
    numersPerPage.Add(new SelectListItem
    {
        Text = "100",
        Value = "100"
    });
}

@if (TempData["Notification"] != null)
{ 
    <h3 style="color: red">@TempData["Notification"]</h3>
}

@*<h2>Items for @User.Identity.Name user:</h2>*@
    <br />
<h2>User items</h2>

<input type="button" style="margin-bottom: 10px" value="Create" class="btn btn-default" onclick="location.href='@Url.Action("CreateNewItem", "ItemsPriority")'" />

<div style="float: right">
    @{
        string invokingAction = ViewBag.InvokingAction == "ShowUserItems" ? "ShowUserItems" : "ShowOldUserItems";
        string actionToInvoke = "/ItemsPriority/" + invokingAction;
        
         <div>
             <form action="@actionToInvoke" method="get">
                 Number per page:
                 @Html.DropDownList("numberPerPage", numersPerPage)
                 <input type="submit" value="Apply" class="btn btn-default" />
             </form>
            </div>
        
    }
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>        
        <th>
            @Html.DisplayNameFor(m => m.Priority)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.Status)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.Created)
        </th>
        <th></th>
    </tr>

    <!--new { style="width:100px;height:25px" }-->

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>  
        
        @switch (item.Priority)
        {
            case AspNetIdentityTry1.Models.Priority.VeryHigh:
                <td style="color:#ff0000 ;">
                    <b>@Html.DisplayFor(modelItem => item.Priority)</b>
                </td>
            break;

            case AspNetIdentityTry1.Models.Priority.High:
                <td style="color:#ff6a00 ;">
                    <b>@Html.DisplayFor(modelItem => item.Priority)</b>
                </td>
            break;

            case AspNetIdentityTry1.Models.Priority.Medium:
            <td style="color:#ffd800 ;">
                <b>@Html.DisplayFor(modelItem => item.Priority)</b>
            </td>
                break;

            case AspNetIdentityTry1.Models.Priority.Low:
            <td style="color:#b6ff00 ;">
                <b>@Html.DisplayFor(modelItem => item.Priority)</b>
            </td>
                break;

            default:
            <td>
                <b>@Html.DisplayFor(modelItem => item.Priority)</b>
            </td>
                break;
        }
              
        
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Created)
        </td>        
        <td>
            @Html.ActionLink("Edit", "EditItem", new { id=item.Id }) |           
            @Html.ActionLink("Delete", "DeleteItem", new { id=item.Id })
        </td>
    </tr>
}

</table>

<div style="font-size: 25px">    
    Page: 

    @for (int i = 1; i <= ViewBag.AllPageNumber; i++)
    {
        string sPage = i.ToString();
                
        @Html.ActionLink(sPage + " ", invokingAction, new { page = i, numberPerPage = @ViewBag.NumberPerPage });        
    }        
</div>


